syntax = "proto3";

package api;

option go_package = "decred.org/mrttree/api";

service Mrttree {
    rpc JoinSession (JoinSessionRequest) returns (JoinSessionResponse);
    rpc RevealLeafKeys (RevealLeafKeysRequest) returns (RevealLeafKeysResponse);
    rpc CommitToNonces (CommitToNoncesRequest) returns (CommitToNoncesResponse);
    rpc RevealNonces (RevealNoncesRequest) returns (RevealNoncesResponse);
    rpc SignedTree (SignedTreeRequest) returns (SignedTreeResponse);
    rpc UserError (UserErrorRequest) returns (UserErrorResponse);
}

message JoinSessionRequest {
    uint32 protocol_version = 1;
    bytes session_id = 2;
    repeated bytes user_pk_hashes = 3;
}

message JoinSessionResponse {
    bytes session_token = 1;
    uint32 lock_time = 2;
    uint32 initial_lock_time = 3;
    uint32 fund_lock_time = 4;
    bytes change_key = 9;
    int64 tx_fee_rate = 10;
    int64 leaf_amount = 11;
    repeated bytes user_pk_hashes = 5;
    repeated bytes provider_pk_hashes = 7;
}

message RevealLeafKeysRequest {
    bytes session_token = 1;
    repeated bytes user_keys = 2;
    repeated bytes user_ivs = 10;
    }

message RevealLeafKeysResponse {
    message input {
        bytes hash = 1;
	uint32 index = 2;
	uint32 tree = 3;
	int64 amount = 4;
	uint32 sequence = 5;
    }

    repeated input prefund_inputs = 1;
    repeated input fund_additional_inputs = 2;
    repeated bytes user_keys = 3;
    repeated bytes user_ivs = 6;
    repeated bytes provider_keys = 9;
    repeated bytes provider_ivs = 10;
}

message ByteSlices {
    repeated bytes data = 1;
}

message CommitToNoncesRequest {
    bytes session_token = 1;
    map<uint32, ByteSlices> tree_nonce_hashes = 2;
    repeated bytes fund_nonce_hashes = 3;
}

message CommitToNoncesResponse {
    map<uint32, ByteSlices> tree_nonce_hashes = 1;
    repeated bytes fund_nonce_hashes = 2;
}

message RevealNoncesRequest {
    bytes session_token = 1;
    map<uint32, ByteSlices> tree_nonces = 2;
    repeated bytes fund_nonces = 3;
}

message RevealNoncesResponse {
    map<uint32, ByteSlices> tree_nonces = 1;
     repeated bytes fund_nonces = 2;
}

message SignedTreeRequest {
    bytes session_token = 1;
    map<uint32, ByteSlices> tree_signatures = 2;
    repeated bytes fund_signatures = 3;
}

message SignedTreeResponse {
    map<uint32, bytes> tree_signatures = 1;
    bytes fund_signature_pub = 4;
}

message UserErrorRequest {
    uint32 session_id = 1;
    string error_msg = 2;
}
message UserErrorResponse { }
